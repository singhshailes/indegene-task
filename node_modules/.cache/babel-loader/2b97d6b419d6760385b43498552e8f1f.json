{"ast":null,"code":"var _jsxFileName = \"/home/shailesh/Desktop/Indegene-task/new-project/src/molecules/MovieCard/MovieCard.js\";\nimport React, { useState, useEffect } from 'react';\nimport './MovieCard.css';\nimport Modal from 'react-bootstrap/Modal';\nexport default function MovieCard(props) {\n  const [showModalBox, setShowModalBox] = useState(false);\n  const [imdbData, setImdbData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const showModal = () => {\n    setIsLoading(true);\n    let url = 'http://www.omdbapi.com/?i=' + props.imdbID + '&plot=full&apikey=328cb361';\n    fetch(url).then(res => res.json()).then(res => {\n      setImdbData(res);\n      setIsLoading(false);\n    });\n    setShowModalBox(true);\n  };\n\n  const handleClose = () => setShowModalBox(false);\n\n  console.log('imdbrating', typeof Number(imdbData));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"movie-card-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, props.name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, props.year), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-more-info\",\n    onClick: showModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, \"More Info\"), /*#__PURE__*/React.createElement(Modal, {\n    show: showModalBox,\n    onHide: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, isLoading ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 34\n    }\n  }, \"Loading.. \") : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"movie-card-modal-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"movie-card-image\",\n    src: imdbData.Poster,\n    alt: \"NA\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"movie-card-allFields\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"movie-card-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 33\n    }\n  }, imdbData.Title), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"movie-card-actors\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 33\n    }\n  }, \"Actors : \", imdbData.Actors), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"movie-card-lang\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 33\n    }\n  }, \"Language: \", imdbData.Language), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"movie-card-awards\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 33\n    }\n  }, \"Awards: \", imdbData.Awards), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"movie-card-production\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 33\n    }\n  }, \"Production: \", imdbData.Production), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"movie-card-rating\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 33\n    }\n  }, Number(imdbData.imdbRating) > 7 ? \"BoxOffice:hit\" : \"BoxOffice : Flop\"))))));\n}","map":{"version":3,"sources":["/home/shailesh/Desktop/Indegene-task/new-project/src/molecules/MovieCard/MovieCard.js"],"names":["React","useState","useEffect","Modal","MovieCard","props","showModalBox","setShowModalBox","imdbData","setImdbData","isLoading","setIsLoading","showModal","url","imdbID","fetch","then","res","json","handleClose","console","log","Number","name","year","Poster","Title","Actors","Language","Awards","Production","imdbRating"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport './MovieCard.css'\nimport Modal from 'react-bootstrap/Modal'\n\nexport default function MovieCard(props) {\n\n    const [showModalBox, setShowModalBox] = useState(false)\n    const [imdbData, setImdbData] = useState([])\n    const [isLoading, setIsLoading] = useState(true)\n\n\n\n    const showModal = () => {\n        setIsLoading(true)\n        let url = 'http://www.omdbapi.com/?i=' + props.imdbID + '&plot=full&apikey=328cb361'\n        fetch(url)\n            .then(res => res.json())\n            .then((res) => {\n                setImdbData(res)\n                setIsLoading(false)\n\n            })\n        setShowModalBox(true)\n    }\n\n\n    const handleClose = () => setShowModalBox(false);\n\n    console.log('imdbrating', typeof(Number(imdbData)))\n\n    return (\n        <div className=\"movie-card-container\">\n            <p>{props.name}</p>\n            <p>{props.year}</p>\n            <div className='btn-more-info' onClick={showModal}>More Info</div>\n\n            <Modal show={showModalBox} onHide={handleClose}>\n                <Modal.Body>\n                    {isLoading ? <p>Loading.. </p> :\n                        (\n                            <div className='movie-card-modal-content'>\n                                <div>\n                                <img  className=\"movie-card-image\" src={imdbData.Poster} alt=\"NA\" />\n                                </div>\n                                <div className='movie-card-allFields'>\n                                <p className=\"movie-card-title\">{imdbData.Title}</p>\n                                <p className=\"movie-card-actors\">Actors : {imdbData.Actors}</p>\n                                <p className=\"movie-card-lang\">Language: {imdbData.Language}</p>\n                                <p className=\"movie-card-awards\">Awards: {imdbData.Awards}</p>\n                                <p className='movie-card-production'>Production: {imdbData.Production}</p>\n                                <p className=\"movie-card-rating\">{Number(imdbData.imdbRating) > 7 ? \"BoxOffice:hit\" : \"BoxOffice : Flop\"}</p>\n                                \n                                </div>\n                            </div>)\n                    }\n                </Modal.Body>\n            </Modal>\n        </div>\n    )\n\n\n\n}\n"]},"metadata":{},"sourceType":"module"}