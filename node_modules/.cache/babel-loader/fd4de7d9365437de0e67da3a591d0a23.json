{"ast":null,"code":"var _jsxFileName = \"/home/shailesh/Desktop/Indegene-task/new-project/src/Home/Pagination/index.js\";\nimport React, { useRef, useEffect, useState } from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nconst FIRST_PAGE = 1;\nexport default function Pagination(props) {\n  const {\n    page,\n    perPage,\n    totalPages,\n    goToPage\n  } = props,\n        classes = useStyles(),\n        pageEl = useRef(null);\n\n  function isValidPage(currentPage) {\n    return currentPage !== page && !!currentPage && Number.isInteger(currentPage) && currentPage >= FIRST_PAGE && currentPage <= totalPages;\n  }\n\n  function handleGoToPage(page) {\n    if (!isValidPage(page)) {\n      return;\n    }\n\n    return goToPage(page);\n  }\n\n  function handleGoToFirstPage() {\n    return handleGoToPage(FIRST_PAGE);\n  }\n\n  function handleGoToLastPage() {\n    return handleGoToPage(totalPages);\n  }\n\n  function handleGoToPrevPage() {\n    return handleGoToPage(page - 1);\n  }\n\n  function handleGoToNextPage() {\n    return handleGoToPage(page + 1);\n  }\n\n  function setPageElText(page) {\n    if (pageEl.current) {\n      pageEl.current.innerText = page;\n    }\n  }\n\n  function resetPageElText() {\n    setPageElText(page);\n  }\n\n  useEffect(resetPageElText, [page]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    onClick: handleGoToFirstPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FirstPageIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    onClick: handleGoToPrevPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(NavigateBeforeIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, \"Showing page\", ' ', /*#__PURE__*/React.createElement(\"span\", {\n    ref: pageEl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }), ' ', \"of \", totalPages), /*#__PURE__*/React.createElement(IconButton, {\n    onClick: handleGoToNextPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(NavigateNextIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    onClick: handleGoToLastPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(LastPageIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  })));\n}","map":{"version":3,"sources":["/home/shailesh/Desktop/Indegene-task/new-project/src/Home/Pagination/index.js"],"names":["React","useRef","useEffect","useState","IconButton","NavigateNextIcon","NavigateBeforeIcon","LastPageIcon","FirstPageIcon","FIRST_PAGE","Pagination","props","page","perPage","totalPages","goToPage","classes","useStyles","pageEl","isValidPage","currentPage","Number","isInteger","handleGoToPage","handleGoToFirstPage","handleGoToLastPage","handleGoToPrevPage","handleGoToNextPage","setPageElText","current","innerText","resetPageElText","text"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useState } from 'react'\nimport IconButton from '@material-ui/core/IconButton'\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext'\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore'\nimport LastPageIcon from '@material-ui/icons/LastPage'\nimport FirstPageIcon from '@material-ui/icons/FirstPage'\n\nconst FIRST_PAGE = 1\n\nexport default function Pagination(props) {\n    const { page, perPage, totalPages, goToPage } = props,\n        classes = useStyles(),\n        \n        pageEl = useRef(null)\n\n    function isValidPage(currentPage) {\n        return (\n            currentPage !== page &&\n            !!currentPage &&\n            Number.isInteger(currentPage) &&\n            currentPage >= FIRST_PAGE &&\n            currentPage <= totalPages\n        )\n    }\n\n    function handleGoToPage(page) {\n        if (!isValidPage(page)) {\n            return\n        }\n\n        return goToPage(page)\n    }\n\n    function handleGoToFirstPage() {\n        return handleGoToPage(FIRST_PAGE)\n    }\n\n    function handleGoToLastPage() {\n        return handleGoToPage(totalPages)\n    }\n\n    function handleGoToPrevPage() {\n        return handleGoToPage(page - 1)\n    }\n\n    function handleGoToNextPage() {\n        return handleGoToPage(page + 1)\n    }\n\n    function setPageElText(page) {\n        if (pageEl.current) {\n            pageEl.current.innerText = page\n        }\n    }\n\n    function resetPageElText() {\n        \n        setPageElText(page)\n    }\n\n    \n    useEffect(resetPageElText, [page])\n    \n\n    return (\n        <div >\n            <IconButton onClick={handleGoToFirstPage} >\n                <FirstPageIcon />\n            </IconButton>\n            <IconButton onClick={handleGoToPrevPage} >\n                <NavigateBeforeIcon />\n            </IconButton>\n            <span className={classes.text}>\n                Showing page{' '}\n\n                <span ref={pageEl} />\n                {' '}\n        of {totalPages}\n            </span>\n            <IconButton onClick={handleGoToNextPage} >\n                <NavigateNextIcon />\n            </IconButton>\n            <IconButton onClick={handleGoToLastPage} >\n                <LastPageIcon />\n            </IconButton>\n        </div>\n    )\n}\n\n"]},"metadata":{},"sourceType":"module"}