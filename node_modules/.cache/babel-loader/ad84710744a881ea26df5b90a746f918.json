{"ast":null,"code":"var _jsxFileName = \"/home/shailesh/Desktop/Indegene-task/new-project/src/Home/Home.js\";\nimport React, { useState } from 'react';\nimport Header from '../atoms/Header/Header';\nimport { Link, Route } from 'react-router-dom';\nimport Navigation from './Navigation';\nimport './Home.css';\nimport MovieCard from '../molecules/MovieCard/MovieCard';\nimport Pagination from './Pagination';\nexport default function Home(props) {\n  const [movieName, setMovieName] = useState('');\n  const [releaseYear, setReleaseYear] = useState();\n  const [movieInfoCollection, setMovieInfoCollection] = useState([]);\n  const [error, setError] = useState(); //pagination\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [lowIndex, setLowIndex] = useState(0);\n  const [highIndex, setHighIndex] = useState(3);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    let url = 'http://www.omdbapi.com/?s=' + movieName + '&y=' + releaseYear + '&apikey=328cb361';\n    fetch(url).then(res => res.json()).then(res => setMovieInfoCollection(res.Search));\n  };\n\n  const handleChange = e => {\n    e.preventDefault();\n\n    if (e.target.name === 'movieName') {\n      if (e.target.value !== ' ') {\n        setError('');\n        setMovieName(e.target.value);\n      } else {\n        setError('Please enter a movie name');\n      }\n    }\n\n    if (e.target.name === 'releaseYear') {\n      if (e.target.value >= 1950 && e.target.value <= 2020) {\n        setError('');\n        setReleaseYear(e.target.value);\n      } else {\n        setError('Year invalid');\n      }\n    }\n  };\n\n  function handlePageChange(currentPage) {\n    setCurrentPage(currentPage);\n    setLowIndex((currentPage - 1) * 3);\n    setHighIndex(currentPage * 3);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Navigation, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"movie-info-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, \"Movie Info\"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, \"Movie Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"movieName\",\n    value: movieName,\n    placeholder: \"Movie name..\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 47\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, \"Release year\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    name: \"releaseYear\",\n    value: releaseYear,\n    placeholder: \"Release year ..\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 47\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, \"Submit\"), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, error)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"movie-info-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, movieInfoCollection.length > 0 ? movieInfoCollection.slice(lowIndex, highIndex).map(item => /*#__PURE__*/React.createElement(\"div\", {\n    key: item.imdbID,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(MovieCard, {\n    name: item.Title,\n    year: item.Year,\n    imdbID: item.imdbID,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 33\n    }\n  }))) : null), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pagination-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Pagination, {\n    perPage: 3,\n    totalPages: Math.ceil(movieInfoCollection.length / 3),\n    page: currentPage,\n    goToPage: handlePageChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  })));\n}","map":{"version":3,"sources":["/home/shailesh/Desktop/Indegene-task/new-project/src/Home/Home.js"],"names":["React","useState","Header","Link","Route","Navigation","MovieCard","Pagination","Home","props","movieName","setMovieName","releaseYear","setReleaseYear","movieInfoCollection","setMovieInfoCollection","error","setError","currentPage","setCurrentPage","lowIndex","setLowIndex","highIndex","setHighIndex","handleSubmit","e","preventDefault","url","fetch","then","res","json","Search","handleChange","target","name","value","handlePageChange","color","length","slice","map","item","imdbID","Title","Year","Math","ceil"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport Header from '../atoms/Header/Header'\nimport { Link, Route } from 'react-router-dom'\nimport Navigation from './Navigation'\nimport './Home.css'\nimport MovieCard from '../molecules/MovieCard/MovieCard'\nimport Pagination from './Pagination'\n\n\n\nexport default function Home(props) {\n    const [movieName, setMovieName] = useState('');\n    const [releaseYear, setReleaseYear] = useState();\n    const [movieInfoCollection, setMovieInfoCollection] = useState([])\n    const [error, setError] = useState()\n    //pagination\n    const [currentPage, setCurrentPage] = useState(1)\n    const [lowIndex, setLowIndex] = useState(0)\n    const [highIndex, setHighIndex] = useState(3)\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        let url = 'http://www.omdbapi.com/?s=' + movieName + '&y=' + releaseYear + '&apikey=328cb361'\n        fetch(url)\n            .then(res => res.json())\n            .then(res => setMovieInfoCollection(res.Search))\n    }\n\n\n\n    const handleChange = (e) => {\n        e.preventDefault()\n        if (e.target.name === 'movieName') {\n            if(e.target.value!==' '){\n                setError('')\n                setMovieName(e.target.value)\n            }\n            else{\n                setError('Please enter a movie name')\n            }\n            \n        }\n        if (e.target.name === 'releaseYear') {\n            if (e.target.value >= 1950 && e.target.value <= 2020){\n                setError('')\n                setReleaseYear(e.target.value)\n            }\n            else{\n                setError('Year invalid')\n            }\n                \n        }\n    }\n    function handlePageChange(currentPage) {\n        setCurrentPage(currentPage)\n        setLowIndex((currentPage - 1) * 3)\n        setHighIndex(currentPage * 3)\n\n    }\n    return (\n        <div>\n            <Header />\n            <Navigation />\n            <form className='movie-info-form'>\n                <h3>Movie Info</h3>\n                <label>Movie Name</label>\n                <input type=\"text\"\n                    name=\"movieName\"\n                    value={movieName}\n                    placeholder=\"Movie name..\"\n                    onChange={handleChange} /><br />\n\n                <label>Release year</label>\n                <input type=\"number\"\n                    name=\"releaseYear\"\n                    value={releaseYear}\n                    placeholder=\"Release year ..\"\n                    onChange={handleChange} /><br />\n                <button onClick={handleSubmit}>Submit</button>\n                <p style={{color:'red'}}>{error}</p>\n            </form>\n            <div className=\"movie-info-container\">\n                {\n                    movieInfoCollection.length > 0\n                        ? movieInfoCollection.slice(lowIndex, highIndex).map(item => (\n                            <div key={item.imdbID}>\n                                <MovieCard\n                                    name={item.Title}\n                                    year={item.Year}\n                                    imdbID={item.imdbID}\n                                />\n                            </div>\n                        ))\n                        : null\n                }\n                </div>\n                <div className=\"pagination-center\">\n                <Pagination\n                    perPage={3}\n                    totalPages={Math.ceil(movieInfoCollection.length / 3)}\n                    page={currentPage}\n                    goToPage={handlePageChange}\n                />\n                </div>                     \n        </div>\n    )\n\n}"]},"metadata":{},"sourceType":"module"}