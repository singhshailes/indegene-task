{"ast":null,"code":"var _jsxFileName = \"/home/shailesh/Desktop/Indegene-task/new-project/src/Home/Pagination/index.js\";\nimport React, { useRef, useEffect, useState } from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport useStyles from './styles';\nconst FIRST_PAGE = 1;\nexport default function Pagination(props) {\n  const {\n    page,\n    perPage,\n    totalPages,\n    goToPage,\n    variant,\n    ...rest\n  } = props,\n        classes = useStyles(),\n        [isPageTooltipVisisble, setPageTooltipVisible] = useState(false),\n        pageEl = useRef(null);\n\n  function isValidPage(currentPage) {\n    return currentPage !== page && !!currentPage && Number.isInteger(currentPage) && currentPage >= FIRST_PAGE && currentPage <= totalPages;\n  }\n\n  function handleGoToPage(page) {\n    if (!isValidPage(page)) {\n      return;\n    }\n\n    return goToPage(page);\n  }\n\n  function handleGoToFirstPage() {\n    return handleGoToPage(FIRST_PAGE);\n  }\n\n  function handleGoToLastPage() {\n    return handleGoToPage(totalPages);\n  }\n\n  function handleGoToPrevPage() {\n    return handleGoToPage(page - 1);\n  }\n\n  function handleGoToNextPage() {\n    return handleGoToPage(page + 1);\n  }\n\n  function setPageElText(page) {\n    if (pageEl.current) {\n      pageEl.current.innerText = page;\n    }\n  }\n\n  function resetPageElText() {\n    setPageTooltipVisible(false);\n    setPageElText(page);\n  }\n\n  function handleInputPage(e) {\n    const {\n      innerText: value\n    } = e.target,\n          numberValue = parseInt(value);\n\n    if (!isValidPage(numberValue)) {\n      return setPageElText(page);\n    }\n\n    return handleGoToPage(numberValue);\n  }\n\n  function handleKeyDown(e) {\n    // NOTE: not doing any expensive operation,\n    // so debounce is not required\n    if (e.which !== 13) {\n      return;\n    }\n\n    e.preventDefault();\n    return handleInputPage(e);\n  }\n\n  function handleKeyUp(e) {\n    setPageTooltipVisible(isValidPage(parseInt(e.target.innerText)));\n  }\n\n  useEffect(resetPageElText, [page]);\n  const iconButtonProps = {\n    color: 'inherit'\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, Object.assign({\n    onClick: handleGoToFirstPage\n  }, iconButtonProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FirstPageIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, Object.assign({\n    onClick: handleGoToPrevPage\n  }, iconButtonProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(NavigateBeforeIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, \"Showing page\", ' ', /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"Hit Enter to go to the page\",\n    open: isPageTooltipVisisble,\n    arrow: true,\n    classes: {\n      tooltip: classes.tooltip,\n      arrow: classes.tooltipArrow\n    },\n    PopperProps: {\n      disablePortal: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    contentEditable: true,\n    ref: pageEl,\n    className: classes.input,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 21\n    }\n  })), ' ', \"of \", totalPages), /*#__PURE__*/React.createElement(IconButton, Object.assign({\n    onClick: handleGoToNextPage\n  }, iconButtonProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(NavigateNextIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, Object.assign({\n    onClick: handleGoToLastPage\n  }, iconButtonProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(LastPageIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  })));\n}","map":{"version":3,"sources":["/home/shailesh/Desktop/Indegene-task/new-project/src/Home/Pagination/index.js"],"names":["React","useRef","useEffect","useState","IconButton","NavigateNextIcon","NavigateBeforeIcon","LastPageIcon","FirstPageIcon","Tooltip","useStyles","FIRST_PAGE","Pagination","props","page","perPage","totalPages","goToPage","variant","rest","classes","isPageTooltipVisisble","setPageTooltipVisible","pageEl","isValidPage","currentPage","Number","isInteger","handleGoToPage","handleGoToFirstPage","handleGoToLastPage","handleGoToPrevPage","handleGoToNextPage","setPageElText","current","innerText","resetPageElText","handleInputPage","e","value","target","numberValue","parseInt","handleKeyDown","which","preventDefault","handleKeyUp","iconButtonProps","color","text","tooltip","arrow","tooltipArrow","disablePortal","input"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useState } from 'react'\nimport IconButton from '@material-ui/core/IconButton'\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext'\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore'\nimport LastPageIcon from '@material-ui/icons/LastPage'\nimport FirstPageIcon from '@material-ui/icons/FirstPage'\nimport Tooltip from '@material-ui/core/Tooltip'\n\nimport useStyles from './styles'\n\nconst FIRST_PAGE = 1\n\nexport default function Pagination(props) {\n    const { page, perPage, totalPages, goToPage, variant, ...rest } = props,\n        classes = useStyles(),\n        [isPageTooltipVisisble, setPageTooltipVisible] = useState(false),\n        pageEl = useRef(null)\n        \n    function isValidPage(currentPage) {\n        return (\n            currentPage !== page &&\n            !!currentPage &&\n            Number.isInteger(currentPage) &&\n            currentPage >= FIRST_PAGE &&\n            currentPage <= totalPages\n        )\n    }\n\n    function handleGoToPage(page) {\n        if (!isValidPage(page)) {\n            return\n        }\n\n        return goToPage(page)\n    }\n\n    function handleGoToFirstPage() {\n        return handleGoToPage(FIRST_PAGE)\n    }\n\n    function handleGoToLastPage() {\n        return handleGoToPage(totalPages)\n    }\n\n    function handleGoToPrevPage() {\n        return handleGoToPage(page - 1)\n    }\n\n    function handleGoToNextPage() {\n        return handleGoToPage(page + 1)\n    }\n\n    function setPageElText(page) {\n        if (pageEl.current) {\n            pageEl.current.innerText = page\n        }\n    }\n\n    function resetPageElText() {\n        setPageTooltipVisible(false)\n        setPageElText(page)\n    }\n\n    function handleInputPage(e) {\n        const { innerText: value } = e.target,\n            numberValue = parseInt(value)\n\n        if (!isValidPage(numberValue)) {\n            return setPageElText(page)\n        }\n\n        return handleGoToPage(numberValue)\n    }\n\n    function handleKeyDown(e) {\n        // NOTE: not doing any expensive operation,\n        // so debounce is not required\n        if (e.which !== 13) {\n            return\n        }\n\n        e.preventDefault()\n        return handleInputPage(e)\n    }\n\n    function handleKeyUp(e) {\n        setPageTooltipVisible(isValidPage(parseInt(e.target.innerText)))\n    }\n\n    useEffect(resetPageElText, [page])\n\n    \n\n    const iconButtonProps = {\n        color: 'inherit',\n    }\n\n    return (\n        <div >\n            <IconButton onClick={handleGoToFirstPage} {...iconButtonProps}>\n                <FirstPageIcon />\n            </IconButton>\n            <IconButton onClick={handleGoToPrevPage} {...iconButtonProps}>\n                <NavigateBeforeIcon />\n            </IconButton>\n            <span className={classes.text}>\n                Showing page{' '}\n                <Tooltip\n                    title=\"Hit Enter to go to the page\"\n                    open={isPageTooltipVisisble}\n                    arrow\n                    classes={{\n                        tooltip: classes.tooltip,\n                        arrow: classes.tooltipArrow,\n                    }}\n                    PopperProps={{ disablePortal: true }}\n                >\n                    <span contentEditable ref={pageEl} className={classes.input} />\n                </Tooltip>{' '}\n        of {totalPages}\n            </span>\n            <IconButton onClick={handleGoToNextPage} {...iconButtonProps}>\n                <NavigateNextIcon />\n            </IconButton>\n            <IconButton onClick={handleGoToLastPage} {...iconButtonProps}>\n                <LastPageIcon />\n            </IconButton>\n        </div>\n    )\n}\n\n"]},"metadata":{},"sourceType":"module"}