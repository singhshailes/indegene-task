{"ast":null,"code":"var _jsxFileName = \"/home/shailesh/Desktop/Indegene-task/new-project/src/molecules/MovieCard/MovieCard.js\";\nimport React, { useState, useEffect } from 'react';\nimport './MovieCard.css';\nimport Modal from 'react-bootstrap/Modal';\nexport default function MovieCard(props) {\n  const [showModalBox, setShowModalBox] = useState(false);\n  const [imdbData, setImdbData] = useState([]);\n  const [rating, setRating] = useState('');\n  useEffect(() => {}, [imdbData]);\n\n  const showModal = () => {\n    console.log('hi fro modal');\n    let url = 'http://www.omdbapi.com/?i=' + props.imdbID + '&plot=full&apikey=328cb361';\n    fetch(url).then(res => res.json()).then(res => setImdbData(res));\n    setShowModalBox(true);\n  };\n\n  const handleClose = () => setShowModalBox(false);\n\n  console.log('imdbrating', imdbData);\n\n  if (imdbData.length > 0) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"movie-card-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }\n    }, props.name), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }\n    }, props.year), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"btn-more-info\",\n      onClick: showModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }\n    }, \"More Info\"), /*#__PURE__*/React.createElement(Modal, {\n      show: showModalBox,\n      onHide: handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: imdbData.Poster,\n      alt: \"NA\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 29\n      }\n    }, imdbData.Title), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 29\n      }\n    }, imdbData.Actors), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 29\n      }\n    }, imdbData.Language), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 29\n      }\n    }, imdbData.length > 0 ? imdbData.Ratings.map(item => /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 66\n      }\n    }, item.Value)) : null)))));\n  } else {\n    return /*#__PURE__*/React.createElement(React.Fragment, null);\n  }\n}","map":{"version":3,"sources":["/home/shailesh/Desktop/Indegene-task/new-project/src/molecules/MovieCard/MovieCard.js"],"names":["React","useState","useEffect","Modal","MovieCard","props","showModalBox","setShowModalBox","imdbData","setImdbData","rating","setRating","showModal","console","log","url","imdbID","fetch","then","res","json","handleClose","length","name","year","Poster","Title","Actors","Language","Ratings","map","item","Value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,iBAAP;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AAEA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAErC,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACS,MAAD,EAAQC,SAAR,IAAmBV,QAAQ,CAAC,EAAD,CAAjC;AAEAC,EAAAA,SAAS,CAAC,MAAI,CAEb,CAFQ,EAEP,CAACM,QAAD,CAFO,CAAT;;AAKA,QAAMI,SAAS,GAAG,MAAM;AACpBC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,QAAIC,GAAG,GAAG,+BAA+BV,KAAK,CAACW,MAArC,GAA8C,4BAAxD;AACAC,IAAAA,KAAK,CAACF,GAAD,CAAL,CACKG,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUC,GAAG,IAAIV,WAAW,CAACU,GAAD,CAF5B;AAGAZ,IAAAA,eAAe,CAAC,IAAD,CAAf;AAEH,GARD;;AAUA,QAAMc,WAAW,GAAG,MAAMd,eAAe,CAAC,KAAD,CAAzC;;AAEAM,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BN,QAA1B;;AACA,MAAGA,QAAQ,CAACc,MAAT,GAAgB,CAAnB,EAAqB;AACjB,wBACI;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIjB,KAAK,CAACkB,IAAV,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIlB,KAAK,CAACmB,IAAV,CAFJ,eAGI;AAAK,MAAA,SAAS,EAAC,eAAf;AAA+B,MAAA,OAAO,EAAEZ,SAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHJ,eAKI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAEN,YAAb;AAA2B,MAAA,MAAM,EAAEe,WAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,GAAG,EAAEb,QAAQ,CAACiB,MAAnB;AAA2B,MAAA,GAAG,EAAC,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIjB,QAAQ,CAACkB,KAAb,CAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIlB,QAAQ,CAACmB,MAAb,CAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAInB,QAAQ,CAACoB,QAAb,CAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACIpB,QAAQ,CAACc,MAAT,GAAkB,CAAlB,GAEId,QAAQ,CAACqB,OAAT,CAAiBC,GAAjB,CAAqBC,IAAI,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIA,IAAI,CAACC,KAAT,CAA7B,CAFJ,GAGM,IAJV,CALJ,CADJ,CADJ,CALJ,CADJ;AAyBH,GA1BD,MA2BI;AACA,wBACI,yCADJ;AAIH;AAEJ","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport './MovieCard.css'\nimport Modal from 'react-bootstrap/Modal'\n\nexport default function MovieCard(props) {\n\n    const [showModalBox, setShowModalBox] = useState(false)\n    const [imdbData, setImdbData] = useState([])\n    const [rating,setRating]=useState('')\n\n    useEffect(()=>{\n\n    },[imdbData])\n\n    \n    const showModal = () => {\n        console.log('hi fro modal')\n        let url = 'http://www.omdbapi.com/?i=' + props.imdbID + '&plot=full&apikey=328cb361'\n        fetch(url)\n            .then(res => res.json())\n            .then(res => setImdbData(res))\n        setShowModalBox(true)\n\n    }\n\n    const handleClose = () => setShowModalBox(false);\n\n    console.log('imdbrating', imdbData)\n    if(imdbData.length>0){\n        return (\n            <div className=\"movie-card-container\">\n                <p>{props.name}</p>\n                <p>{props.year}</p>\n                <div className='btn-more-info' onClick={showModal}>More Info</div>\n    \n                <Modal show={showModalBox} onHide={handleClose}>\n                    <Modal.Body>\n                        <div>\n                            <img src={imdbData.Poster} alt=\"NA\" />\n                            <p>{imdbData.Title}</p>\n                            <p>{imdbData.Actors}</p>\n                            <p>{imdbData.Language}</p>\n                            <p>{\n                                imdbData.length > 0 ?\n                                    \n                                    imdbData.Ratings.map(item => <p>{item.Value}</p>)\n                                    : null\n    \n                            }</p>\n                        </div>\n                    </Modal.Body>\n                </Modal>\n            </div>\n        )\n    }\n    else{\n        return(\n            <>\n            </>\n        )\n    }\n    \n}\n"]},"metadata":{},"sourceType":"module"}